rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Users can upload and read their own profile images
    match /users/{userId}/profile/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can upload and read their own avatars
    match /avatars/{userId}/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can upload and read media in chats they participate in
    match /chats/{chatId}/media/{fileName} {
      allow read, write: if request.auth != null && 
        request.auth.uid in firestore.get(/databases/(default)/documents/chats/$(chatId)).data.participants;
    }
    
    // Users can upload and read media in groups they are members of
    match /groups/{groupId}/media/{fileName} {
      allow read, write: if request.auth != null && 
        request.auth.uid in firestore.get(/databases/(default)/documents/groups/$(groupId)).data.members;
    }
    
    // Chat media accessible by participants (path: chatMedia/{chatId}/{fileName})
    // For emulator/development: Allow any authenticated user to upload
    // For production: Should validate participant membership
    match /chatMedia/{chatId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      // TODO: Enable participant check for production:
      // allow write: if request.auth != null && (
      //   request.auth.uid in firestore.get(/databases/(default)/documents/chats/$(chatId)).data.participants ||
      //   request.auth.uid in firestore.get(/databases/(default)/documents/groups/$(chatId)).data.members
      // );
    }
  }
}

